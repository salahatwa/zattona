{"version":3,"file":"ngx-sharebuttons.js","sources":["../../projects/ngx-sharebuttons/src/lib/share.models.ts","../../projects/ngx-sharebuttons/src/lib/utils.ts","../../projects/ngx-sharebuttons/src/lib/share.defaults.ts","../../projects/ngx-sharebuttons/src/lib/share.service.ts","../../projects/ngx-sharebuttons/src/lib/share-button.directive.ts","../../projects/ngx-sharebuttons/src/lib/share.module.ts","../../../projects/ngx-sharebuttons/src/ngx-sharebuttons.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Observable, Subject } from 'rxjs';\n\nexport const SHARE_BUTTONS_CONFIG = new InjectionToken<ShareButtonsConfig>('shareButtonsConfig');\n\n/**\n * Share buttons config\n */\nexport interface ShareButtonsConfig {\n  sharerMethod?: SharerMethod;\n  sharerTarget?: string;\n  windowObj?: any;\n  windowFuncName?: string;\n  prop?: IShareButtons;\n  theme?: string;\n  include?: string[];\n  exclude?: string[];\n  size?: number;\n  url?: string;\n  title?: string;\n  description?: string;\n  image?: string;\n  tags?: string;\n  twitterAccount?: string;\n  autoSetMeta?: boolean;\n  gaTracking?: boolean;\n  windowWidth?: number;\n  windowHeight?: number;\n  moreButtonIcon?: any;\n  lessButtonIcon?: any;\n  debug?: boolean;\n}\n\n/**\n * Share buttons collection\n */\nexport interface IShareButtons {\n  facebook?: IShareButton;\n  twitter?: IShareButton;\n  linkedin?: IShareButton;\n  google?: IShareButton;\n  tumblr?: IShareButton;\n  mix?: IShareButton;\n  pinterest?: IShareButton;\n  reddit?: IShareButton;\n  viber?: IShareButton;\n  vk?: IShareButton;\n  telegram?: IShareButton;\n  messenger?: IShareButton;\n  whatsapp?: IShareButton;\n  xing?: IShareButton;\n  line?: IShareButton;\n  sms?: IShareButton;\n  email?: IShareButton;\n  print?: IShareButton;\n  copy?: IShareButton;\n}\n\nexport class IShareButton {\n  /** Share button type */\n  type?: string;\n  /** Share button text */\n  text?: string;\n  /** Share button aria label attribute */\n  ariaLabel?: string;\n  /** Share button icon (FontAwesome) */\n  icon?: string | string[] | any;\n  /** Share button color */\n  color?: string;\n  /** Sharer target used in opening the share window */\n  target?: string;\n  /** Sharer method */\n  method?: SharerMethod;\n  /** Sharer base URL */\n  share?: {\n    desktop?: string;\n    android?: string;\n    ios?: string;\n  };\n  /** Sharer URL params */\n  params?: ShareParams;\n  /**\n   * Params function: A function that resolves the param value (Advanced use)\n   *  Use case: To define a custom template for share buttons like Email, whatsapp, telegram, sms ...etc\n   */\n  paramsFunc?: ShareParamsFuncMetaData;\n  /**\n   * Object used to attach additional data in a custom template for 'paramsFunc'\n   */\n  data?: any;\n  /**\n   * Some button do not open a share window, instead they execute a function like Print and Copy buttons.\n   */\n  func?: (args: ShareButtonFuncArgs<any>) => Observable<any>;\n}\n\n/**\n * Share params\n */\nexport interface ShareParams {\n  url?: string;\n  title?: string;\n  description?: string;\n  image?: string;\n  tags?: string;\n  via?: string;\n}\n\n/**\n * Share param function (Used to define message body template)\n */\nexport type ShareParamsFunc = (p: ShareParams) => string;\n\n/**\n * Share params available functions\n */\ninterface ShareParamsFuncMetaData {\n  url?: ShareParamsFunc;\n  title?: ShareParamsFunc;\n  description?: ShareParamsFunc;\n  image?: ShareParamsFunc;\n  tags?: ShareParamsFunc;\n  via?: ShareParamsFunc;\n}\n\n/**\n * Share button function arguments (used in copyToClipboard as function arguments)\n */\nexport interface ShareButtonFuncArgs<T> {\n  clipboard?: Clipboard;\n  params?: ShareParams;\n  data?: T;\n  updater?: Subject<ShareDirectiveUpdater>;\n}\n\n/**\n * Share directive updater arguments (used in copyToClipboard to update button text and icon)\n */\nexport interface ShareDirectiveUpdater {\n  icon: string | string[];\n  text: string;\n  disabled?: boolean;\n}\n\nexport enum SharerMethod {\n  Anchor = 'anchor',\n  Window = 'window'\n}\n","import { Observable, of, Subscriber } from 'rxjs';\nimport { delay, take, tap } from 'rxjs/operators';\nimport { ShareButtonFuncArgs } from './share.models';\n\n/**\n * Simple object check.\n */\nfunction isObject(item): boolean {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * Deep merge two objects.\n */\nexport function mergeDeep(target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {[key]: {}});\n        }\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, {[key]: source[key]});\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n\n/** Returns a valid URL or falls back to current URL */\nexport function getValidUrl(url: string, fallbackUrl: string): string {\n  if (url) {\n    const r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n    if (r.test(url)) {\n      return url;\n    }\n    console.warn(`[ShareButtons]: Sharing link '${ url }' is invalid!`);\n  }\n  return fallbackUrl;\n}\n\nexport function printPage(): Observable<void> {\n  return new Observable((sub: Subscriber<any>) => document.defaultView.print());\n}\n\nexport function copyToClipboard({params, data, clipboard, updater}: ShareButtonFuncArgs<CopyToClipboardDataArgs>): Observable<void> {\n  return of(null).pipe(\n    tap(() => {\n      clipboard.copy(params.url);\n      // Disable copy button\n      updater.next({icon: data.successIcon, text: data.successText, disabled: true});\n    }),\n    delay(data.delay),\n    tap(() => updater.next({icon: data.icon, text: data.text, disabled: false})),\n    take(1)\n  );\n}\n\ninterface CopyToClipboardDataArgs {\n  delay: number;\n  text: string;\n  icon: string[];\n  successText: string;\n  successIcon: string[];\n}\n","import { IShareButtons, ShareParams } from './share.models';\nimport { copyToClipboard, printPage } from './utils';\n\n// Create message body that includes the sharing link used for Email, SMS and WhatsApp buttons\nconst linkInDescription = {\n  description: (p: ShareParams) => {\n    return p.description ? `${ p.description }\\r\\n${ p.url }` : p.url;\n  }\n};\n\nexport const SHARE_BUTTONS: IShareButtons = {\n  facebook: {\n    type: 'facebook',\n    text: 'Facebook',\n    ariaLabel: 'Share on Facebook',\n    icon: ['fab', 'facebook-f'],\n    color: '#4267B2',\n    share: {\n      desktop: 'https://www.facebook.com/sharer/sharer.php?'\n    },\n    params: {\n      url: 'u'\n    }\n  },\n  twitter: {\n    type: 'twitter',\n    text: 'Twitter',\n    ariaLabel: 'Share on Twitter',\n    icon: ['fab', 'twitter'],\n    color: '#00acee',\n    share: {\n      desktop: 'https://twitter.com/intent/tweet?'\n    },\n    params: {\n      url: 'url',\n      description: 'text',\n      tags: 'hashtags',\n      via: 'via'\n    }\n  },\n  linkedin: {\n    type: 'linkedin',\n    text: 'LinkedIn',\n    ariaLabel: 'Share on LinkedIn',\n    icon: ['fab', 'linkedin-in'],\n    color: '#006fa6',\n    share: {\n      desktop: 'https://www.linkedin.com/shareArticle?'\n    },\n    params: {\n      url: 'url',\n      title: 'title',\n      description: 'summary'\n    }\n  },\n  pinterest: {\n    type: 'pinterest',\n    text: 'Pinterest',\n    ariaLabel: 'Share on Pinterest',\n    icon: ['fab', 'pinterest-p'],\n    color: '#BD091D',\n    share: {\n      desktop: 'https://pinterest.com/pin/create/button/?'\n    },\n    params: {\n      url: 'url',\n      description: 'description',\n      image: 'media'\n    }\n  },\n  reddit: {\n    type: 'reddit',\n    text: 'Reddit',\n    ariaLabel: 'Share on Reddit',\n    icon: ['fab', 'reddit-alien'],\n    color: '#FF4006',\n    share: {\n      desktop: 'https://www.reddit.com/submit?'\n    },\n    params: {\n      url: 'url',\n      title: 'title'\n    }\n  },\n  tumblr: {\n    type: 'tumblr',\n    text: 'Tumblr',\n    ariaLabel: 'Share on Tumblr',\n    icon: ['fab', 'tumblr'],\n    color: '#36465D',\n    share: {\n      desktop: 'https://tumblr.com/widgets/share/tool?'\n    },\n    params: {\n      url: 'canonicalUrl',\n      description: 'caption',\n      tags: 'tags'\n    }\n  },\n  mix: {\n    type: 'mix',\n    text: 'Mix',\n    ariaLabel: 'Share on Mix',\n    icon: ['fab', 'mix'],\n    color: '#eb4924',\n    share: {\n      desktop: 'https://mix.com/add?'\n    },\n    params: {\n      url: 'url'\n    }\n  },\n  viber: {\n    type: 'viber',\n    text: 'Viber',\n    ariaLabel: 'Share on Viber',\n    icon: ['fab', 'viber'],\n    color: '#665ca7',\n    share: {\n      android: 'viber://forward?',\n      ios: 'viber://forward?'\n    },\n    params: {\n      description: 'text'\n    },\n    paramsFunc: linkInDescription\n  },\n  vk: {\n    type: 'vk',\n    text: 'VKontakte',\n    ariaLabel: 'Share on VKontakte',\n    icon: ['fab', 'vk'],\n    color: '#4C75A3',\n    share: {\n      desktop: 'https://vk.com/share.php?'\n    },\n    params: {\n      url: 'url'\n    }\n  },\n  telegram: {\n    type: 'telegram',\n    text: 'Telegram',\n    ariaLabel: 'Share on Telegram',\n    icon: ['fab', 'telegram-plane'],\n    color: '#0088cc',\n    share: {\n      desktop: 'https://t.me/share/url?'\n    },\n    params: {\n      url: 'url',\n      description: 'text'\n    }\n  },\n  messenger: {\n    type: 'messenger',\n    text: 'Messenger',\n    ariaLabel: 'Share on Messenger',\n    icon: ['fab', 'facebook-messenger'],\n    color: '#0080FF',\n    share: {\n      android: 'fb-messenger://share/?',\n      ios: 'fb-messenger://share/?'\n    },\n    params: {\n      url: 'link'\n    }\n  },\n  whatsapp: {\n    type: 'whatsapp',\n    text: 'WhatsApp',\n    ariaLabel: 'Share on WhatsApp',\n    icon: ['fab', 'whatsapp'],\n    color: '#25D366',\n    share: {\n      desktop: 'https://web.whatsapp.com/send?',\n      android: 'whatsapp://send?',\n      ios: 'https://api.whatsapp.com/send?'\n    },\n    params: {\n      description: 'text'\n    },\n    paramsFunc: linkInDescription\n  },\n  xing: {\n    type: 'xing',\n    text: 'Xing',\n    ariaLabel: 'Share on Xing',\n    icon: ['fab', 'xing'],\n    color: '#006567',\n    share: {\n      desktop: 'https://www.xing.com/spi/shares/new?'\n    },\n    params: {\n      url: 'url'\n    }\n  },\n  line: {\n    type: 'line',\n    text: 'Line',\n    ariaLabel: 'Share on Line',\n    icon: ['fab', 'line'],\n    color: '#00b900',\n    share: {\n      desktop: 'https://social-plugins.line.me/lineit/share?'\n    },\n    params: {\n      url: 'url'\n    }\n  },\n  sms: {\n    type: 'sms',\n    text: 'SMS',\n    ariaLabel: 'Share link via SMS',\n    icon: ['fas', 'sms'],\n    color: '#20c16c',\n    share: {\n      desktop: 'sms:?',\n      ios: 'sms:&'\n    },\n    params: {\n      description: 'body'\n    },\n    paramsFunc: linkInDescription\n  },\n  email: {\n    type: 'email',\n    text: 'Email',\n    ariaLabel: 'Share link via email',\n    icon: ['fas', 'envelope'],\n    color: '#FF961C',\n    share: {\n      desktop: 'mailto:?'\n    },\n    params: {\n      title: 'subject',\n      description: 'body'\n    },\n    paramsFunc: linkInDescription\n  },\n  print: {\n    type: 'print',\n    text: 'Print',\n    ariaLabel: 'Print page',\n    icon: ['fas', 'print'],\n    color: '#765AA2',\n    func: printPage\n  },\n  copy: {\n    type: 'copy',\n    text: 'Copy link',\n    ariaLabel: 'Copy link',\n    icon: ['fas', 'link'],\n    color: '#607D8B',\n    data: {\n      text: 'Copy link',\n      icon: ['fas', 'link'],\n      successText: 'Copied',\n      successIcon: ['fas', 'check'],\n      delay: 2000\n    },\n    func: copyToClipboard\n  }\n};\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { BehaviorSubject } from 'rxjs';\nimport { IShareButton, SHARE_BUTTONS_CONFIG, ShareButtonsConfig, SharerMethod } from './share.models';\nimport { SHARE_BUTTONS } from './share.defaults';\nimport { mergeDeep } from './utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShareService {\n\n  /** Global config that applies on all share buttons in the app */\n  config: ShareButtonsConfig = {\n    sharerMethod: SharerMethod.Anchor,\n    sharerTarget: '_blank',\n    windowObj: this._document.defaultView,\n    windowFuncName: 'open',\n    prop: SHARE_BUTTONS,\n    theme: 'default',\n    include: [],\n    exclude: [],\n    size: 0,\n    autoSetMeta: true,\n    windowWidth: 800,\n    windowHeight: 500,\n    moreButtonIcon: 'ellipsis-h',\n    lessButtonIcon: 'minus'\n  };\n\n  /** Stream that emits when config changes */\n  config$ = new BehaviorSubject(this.config);\n\n  constructor(@Optional() @Inject(SHARE_BUTTONS_CONFIG) config: ShareButtonsConfig, @Inject(DOCUMENT) private _document: any) {\n    if (config) {\n      this.setConfig(config);\n    }\n  }\n\n  /**\n   * Share buttons properties, used to get the text, color and icon of each button.\n   */\n  get prop() {\n    return this.config.prop;\n  }\n\n  get windowSize() {\n    return `width=${ this.config.windowWidth }, height=${ this.config.windowHeight }`;\n  }\n\n  setConfig(config: ShareButtonsConfig) {\n    this.config = mergeDeep(this.config, config);\n    this.config$.next(this.config);\n  }\n\n  addButton(name: string, props: IShareButton) {\n    this.setConfig({\n      prop: {\n        [name]: props\n      }\n    });\n  }\n\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  HostListener,\n  Inject,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  SimpleChange,\n  EventEmitter,\n  ElementRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Meta } from '@angular/platform-browser';\nimport { Platform } from '@angular/cdk/platform';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { EMPTY, Observable, Subject, Subscriber } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\n\nimport { ShareService } from './share.service';\nimport { IShareButton, ShareDirectiveUpdater, ShareParams, ShareParamsFunc, SharerMethod } from './share.models';\nimport { getValidUrl } from './utils';\n\n@Directive({\n  selector: '[shareButton]',\n  exportAs: 'shareButton'\n})\nexport class ShareDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** Variable used to check for the final sharer url (For testing only) */\n  private _finalUrl: string;\n\n  /** Share directive element ref */\n  private readonly _el: HTMLButtonElement;\n\n  /** A ref to button class - used to remove previous class when the button type is changed */\n  private _buttonClass: string;\n\n  /** Stream that emits when button is destroyed */\n  private readonly _destroyed = new Subject<void>();\n\n  /** Stream that emit when share button need to be updated */\n  private readonly _updater = new Subject<ShareDirectiveUpdater>();\n\n  /** Share button properties */\n  shareButton: IShareButton;\n\n  /** Share button color */\n  color: string;\n\n  /** Share button text */\n  text: string;\n\n  /** Share button icon */\n  icon: string | string[];\n\n  /** Share button type */\n  @Input('shareButton') shareButtonName: string;\n\n  /** Set meta tags from document head, useful when SEO is supported */\n  @Input() autoSetMeta: boolean = this._share.config.autoSetMeta;\n\n  /** Sharing link */\n  @Input() url: string = this._share.config.url;\n\n  /** Sets the title parameter */\n  @Input() title: string = this._share.config.title;\n\n  /** Sets the description parameter */\n  @Input() description: string = this._share.config.description;\n\n  /** Sets the image parameter for sharing on Pinterest */\n  @Input() image: string = this._share.config.image;\n\n  /** Sets the tags parameter for sharing on Twitter and Tumblr */\n  @Input() tags: string = this._share.config.tags;\n\n  /** Stream that emits when share dialog is opened */\n  @Output() opened = new EventEmitter<string>();\n\n  /** Stream that emits when share dialog is closed */\n  @Output() closed = new EventEmitter<string>();\n\n  constructor(_el: ElementRef,\n              private _meta: Meta,\n              private _platform: Platform,\n              private _clipboard: Clipboard,\n              private _share: ShareService,\n              private _cd: ChangeDetectorRef,\n              @Inject(DOCUMENT) private _document: any) {\n    this._el = _el.nativeElement;\n  }\n\n  /**\n   * Share the link\n   */\n  @HostListener('click')\n  share() {\n    // Avoid SSR error\n    if (this._platform.isBrowser && this.shareButton) {\n      // Prepare sharer url params\n      const params: ShareParams = this.autoSetMeta ? this.getParamsFromMetaTags() : this.getParamsFromInputs();\n\n      // Prepare share button click\n      const click = this.shareButton.share ? this.open(params) : this.shareButton.func({\n        params,\n        data: this.shareButton.data,\n        clipboard: this._clipboard,\n        updater: this._updater\n      });\n\n      click.pipe(takeUntil(this._destroyed)).subscribe();\n    } else {\n      console.warn(`${ this.text } button is not compatible on this Platform`);\n    }\n  }\n\n  ngOnInit() {\n    // This stream is mainly used to update the copy button text and icon when it is being clicked\n    this._updater.pipe(\n      tap((data: any) => {\n        this.icon = data.icon;\n        this.text = data.text;\n        this._el.style.pointerEvents = data.disabled ? 'none' : 'auto';\n        this._cd.markForCheck();\n      }),\n      takeUntil(this._destroyed)\n    ).subscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Avoid SSR error\n    if (this._platform.isBrowser) {\n\n      // Create share button\n      if (this._shareButtonChanged(changes.shareButtonName)) {\n        this._createShareButton();\n      }\n      // Prepare share url\n      if (this._urlChanged(changes.url)) {\n        this.url = getValidUrl(\n          this.autoSetMeta\n            ? this.url || this._getMetaTagContent('og:url')\n            : this.url,\n          this._document.defaultView.location.href\n        );\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  private _createShareButton() {\n    const button: IShareButton = this._share.config.prop[this.shareButtonName];\n    if (button) {\n      // Set share button properties\n      this.shareButton = button;\n\n      // Remove previous button class\n      this._el.classList.remove(`sb-${ this._buttonClass }`);\n\n      // Add new button class\n      this._el.classList.add(`sb-${ this.shareButtonName }`);\n\n      // Set button css color variable\n      this._el.style.setProperty('--button-color', this.shareButton.color);\n\n      // Keep a copy of the class for future replacement\n      this._buttonClass = this.shareButtonName;\n\n      this.color = this.shareButton.color;\n      this.text = this.shareButton.text;\n      this.icon = this.shareButton.icon;\n\n      // Set aria-label attribute\n      this._el.setAttribute('aria-label', button.ariaLabel);\n    } else {\n      console.error(`[ShareButtons]: The share button '${ this.shareButtonName }' does not exist!`);\n    }\n  }\n\n  /**\n   * Get meta tag content\n   */\n  private _getMetaTagContent(key: string): string {\n    const metaUsingProperty: HTMLMetaElement = this._meta.getTag(`property=\"${ key }\"`);\n    if (metaUsingProperty) {\n      return metaUsingProperty.getAttribute('content');\n    }\n    const metaUsingName: HTMLMetaElement = this._meta.getTag(`name=\"${ key }\"`);\n    if (metaUsingName) {\n      return metaUsingName.getAttribute('content');\n    }\n  }\n\n  private _shareButtonChanged(change: SimpleChange): boolean {\n    return change && (change.firstChange || change.previousValue !== change.currentValue);\n  }\n\n  private _urlChanged(change: SimpleChange): boolean {\n    return !this.url || (change && change.previousValue !== change.currentValue);\n  }\n\n  /**\n   * Get share params from meta tags first and fallback to user inputs\n   */\n  private getParamsFromMetaTags(): ShareParams {\n    return {\n      url: this.url,\n      title: this.title || this._getMetaTagContent('og:title'),\n      description: this.description || this._getMetaTagContent('og:description'),\n      image: this.image || this._getMetaTagContent('og:image'),\n      via: this._share.config.twitterAccount,\n      tags: this.tags\n    };\n  }\n\n  /**\n   * Get share params from user inputs\n   */\n  private getParamsFromInputs(): ShareParams {\n    return {\n      url: this.url,\n      title: this.title,\n      description: this.description,\n      image: this.image,\n      tags: this.tags,\n      via: this._share.config.twitterAccount,\n    };\n  }\n\n  private open(params: ShareParams): Observable<void> {\n    // Set sharer link based on user's device\n    let sharerLink: string;\n    if (this._platform.IOS && this.shareButton.share.ios) {\n      sharerLink = this.shareButton.share.ios;\n    } else if (this._platform.ANDROID && this.shareButton.share.android) {\n      sharerLink = this.shareButton.share.android;\n    } else {\n      sharerLink = this.shareButton.share.desktop;\n    }\n\n    if (sharerLink) {\n      // Set sharer link params\n      this._finalUrl = sharerLink + this._serializeParams(params);\n\n      // Log the sharer link in debug mode\n      if (this._share.config.debug) {\n        console.log('[DEBUG SHARE BUTTON]: ', this._finalUrl);\n      }\n\n      // Open the share window\n      // There are two methods available for opening the share window:\n      // 1. Using a real anchor\n      // 2. Using window.open\n      const sharerMethod = this.shareButton.method || this._share.config.sharerMethod;\n      const sharerTarget = this.shareButton.target || this._share.config.sharerTarget;\n\n      switch (sharerMethod) {\n\n        case SharerMethod.Anchor:\n          const linkElement: HTMLLinkElement = this._document.createElement('a');\n          // Make it open in a new tab/window (depends on user's browser configuration)\n          linkElement.setAttribute('target', sharerTarget);\n\n          // Prevent security vulnerability https://medium.com/@jitbit/target-blank-the-most-underestimated-vulnerability-ever-96e328301f4c\n          linkElement.setAttribute('rel', 'noopener noreferrer');\n          linkElement.href = this._finalUrl;\n          linkElement.click();\n          linkElement.remove();\n          break;\n\n        case SharerMethod.Window:\n          // Open link using Window object\n          const openWindow = this._share.config.windowObj[this._share.config.windowFuncName];\n          const popUpWindow = openWindow(this._finalUrl, sharerTarget, this._share.windowSize);\n\n          // Prevent security vulnerability https://medium.com/@jitbit/target-blank-the-most-underestimated-vulnerability-ever-96e328301f4c\n          this._share.config.windowObj.opener = null;\n\n          // Resolve when share dialog is closed\n          if (popUpWindow) {\n            return new Observable<void>((sub: Subscriber<void>) => {\n              const pollTimer = this._document.defaultView.setInterval(() => {\n                if (popUpWindow.closed) {\n                  this._document.defaultView.clearInterval(pollTimer);\n\n                  // Emit when share windows is closed\n                  this.closed.emit(this.shareButtonName);\n                  sub.next();\n                  sub.complete();\n                }\n              }, 200);\n            });\n          }\n          break;\n      }\n\n      // Emit when share window is opened\n      this.opened.emit(this.shareButtonName);\n    }\n    return EMPTY;\n  }\n\n  private _serializeParams(params: ShareParams): string {\n    return Object.entries(this.shareButton.params)\n    .map(([key, value]) => {\n      // Check if share button param has a map function\n      const paramFunc: ShareParamsFunc = this.shareButton.paramsFunc ? this.shareButton.paramsFunc[key] : null;\n\n      if (params[key] || paramFunc) {\n        const paramValue = paramFunc ? paramFunc(params) : params[key];\n        return `${ value }=${ encodeURIComponent(paramValue) }`;\n      }\n      return '';\n    })\n    .filter(urlParam => urlParam !== '')\n    .join('&');\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\nimport { ShareDirective } from './share-button.directive';\nimport { SHARE_BUTTONS_CONFIG, ShareButtonsConfig } from './share.models';\n\n@NgModule({\n  imports: [\n    PlatformModule,\n    ClipboardModule\n  ],\n  declarations: [\n    ShareDirective\n  ],\n  exports: [\n    ShareDirective\n  ]\n})\nexport class ShareModule {\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders<ShareModule> {\n    return {\n      ngModule: ShareModule,\n      providers: [\n        {provide: SHARE_BUTTONS_CONFIG, useValue: config}\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}