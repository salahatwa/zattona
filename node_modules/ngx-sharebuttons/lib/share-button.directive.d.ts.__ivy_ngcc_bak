import { OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';
import { Meta } from '@angular/platform-browser';
import { Platform } from '@angular/cdk/platform';
import { Clipboard } from '@angular/cdk/clipboard';
import { ShareService } from './share.service';
import { IShareButton } from './share.models';
export declare class ShareDirective implements OnInit, OnChanges, OnDestroy {
    private _meta;
    private _platform;
    private _clipboard;
    private _share;
    private _cd;
    private _document;
    /** Variable used to check for the final sharer url (For testing only) */
    private _finalUrl;
    /** Share directive element ref */
    private readonly _el;
    /** A ref to button class - used to remove previous class when the button type is changed */
    private _buttonClass;
    /** Stream that emits when button is destroyed */
    private readonly _destroyed;
    /** Stream that emit when share button need to be updated */
    private readonly _updater;
    /** Share button properties */
    shareButton: IShareButton;
    /** Share button color */
    color: string;
    /** Share button text */
    text: string;
    /** Share button icon */
    icon: string | string[];
    /** Share button type */
    shareButtonName: string;
    /** Set meta tags from document head, useful when SEO is supported */
    autoSetMeta: boolean;
    /** Sharing link */
    url: string;
    /** Sets the title parameter */
    title: string;
    /** Sets the description parameter */
    description: string;
    /** Sets the image parameter for sharing on Pinterest */
    image: string;
    /** Sets the tags parameter for sharing on Twitter and Tumblr */
    tags: string;
    /** Stream that emits when share dialog is opened */
    opened: EventEmitter<string>;
    /** Stream that emits when share dialog is closed */
    closed: EventEmitter<string>;
    constructor(_el: ElementRef, _meta: Meta, _platform: Platform, _clipboard: Clipboard, _share: ShareService, _cd: ChangeDetectorRef, _document: any);
    /**
     * Share the link
     */
    share(): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private _createShareButton;
    /**
     * Get meta tag content
     */
    private _getMetaTagContent;
    private _shareButtonChanged;
    private _urlChanged;
    /**
     * Get share params from meta tags first and fallback to user inputs
     */
    private getParamsFromMetaTags;
    /**
     * Get share params from user inputs
     */
    private getParamsFromInputs;
    private open;
    private _serializeParams;
}
