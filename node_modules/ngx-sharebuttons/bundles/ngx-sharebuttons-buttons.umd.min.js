!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("ngx-sharebuttons"),require("ngx-sharebuttons/button"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("ngx-sharebuttons/buttons",["exports","@angular/core","@angular/common","ngx-sharebuttons","ngx-sharebuttons/button","rxjs","rxjs/operators"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self)["ngx-sharebuttons"]=e["ngx-sharebuttons"]||{},e["ngx-sharebuttons"].buttons={}),e.ng.core,e.ng.common,e["ngx-sharebuttons"],e["ngx-sharebuttons"].button,e.rxjs,e.rxjs.operators)}(this,(function(e,t,n,o,s,u,r){"use strict";var i=function(){function e(e){this._share=e,this._state$=new u.BehaviorSubject({includedButtons:[],excludedButtons:[],userButtons:[],selectedButtons:[],expanded:!0,shownCount:Object.keys(o.SHARE_BUTTONS).length}),this._configSub$=u.Subscription.EMPTY,this.theme=this._share.config.theme,this.showIcon=!0,this.showText=!1,this.size=0,this.opened=new t.EventEmitter,this.closed=new t.EventEmitter}return e.prototype.ngOnInit=function(){var e=this;this.state$=this._state$.pipe(r.map((function(e){var t=e.includedButtons&&e.includedButtons.length?e.includedButtons:e.userButtons,n=e.excludedButtons?t.filter((function(t){return e.excludedButtons.indexOf(t)<0})):t,o=n.slice(0,e.expanded?n.length:e.shownCount);return{userButtons:n,selectedButtons:o,expanded:e.expanded,shownCount:e.shownCount,moreIcon:e.moreIcon,lessIcon:e.lessIcon}}))),this._configSub$=this._share.config$.subscribe((function(t){var n=(t.include.length?t.include:Object.keys(o.SHARE_BUTTONS)).filter((function(e){return t.exclude.indexOf(e)<0}));e.updateState({userButtons:n,expanded:!1,moreIcon:t.moreButtonIcon,lessIcon:t.lessButtonIcon})}))},e.prototype.ngOnChanges=function(e){(e.include&&e.include.currentValue!==e.include.previousValue||e.exclude&&e.exclude.currentValue!==e.exclude.previousValue||e.show&&e.show.currentValue!==e.show.previousValue)&&this.updateState({includedButtons:this.include,excludedButtons:this.exclude,shownCount:this.show})},e.prototype.ngOnDestroy=function(){this._configSub$.unsubscribe(),this._state$.complete()},e.prototype.updateState=function(e){this._state$.next(Object.assign(Object.assign({},this._state$.value),e))},e}();i.decorators=[{type:t.Component,args:[{selector:"share-buttons",template:'<div *ngIf="state$ | async; let state" class="sb-group sb-{{theme}}">\n  <share-button *ngFor="let button of state.selectedButtons"\n                [button]="button"\n                [theme]="theme"\n                [url]="url"\n                [title]="title"\n                [description]="description"\n                [image]="image"\n                [tags]="tags"\n                [autoSetMeta]="autoSetMeta"\n                [showIcon]="showIcon"\n                [showText]="showText"\n                [size]="size"\n                (opened)="opened.emit($event)"\n                (closed)="closed.emit($event)"\n                [disabled]="disabled">\n  </share-button>\n  <expand-button *ngIf="state.shownCount < state.userButtons.length"\n                 class="sb-button sb-{{theme}}"\n                 [expanded]="state.expanded"\n                 [moreIcon]="state.moreIcon"\n                 [lessIcon]="state.lessIcon"\n                 [size]="(1 + size/20) * 14"\n                 (toggle)="updateState({expanded: $event})">\n  </expand-button>\n</div>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[":host{--sb-margin:0.3125em;display:inherit}"]}]}],i.ctorParameters=function(){return[{type:o.ShareService}]},i.propDecorators={theme:[{type:t.Input}],include:[{type:t.Input}],exclude:[{type:t.Input}],show:[{type:t.Input}],url:[{type:t.Input}],title:[{type:t.Input}],description:[{type:t.Input}],image:[{type:t.Input}],tags:[{type:t.Input}],autoSetMeta:[{type:t.Input}],showIcon:[{type:t.Input}],showText:[{type:t.Input}],size:[{type:t.Input}],disabled:[{type:t.Input}],opened:[{type:t.Output}],closed:[{type:t.Output}]};var a=function(e){this.toggle=new t.EventEmitter,e.nativeElement.style.setProperty("--button-color","#FF6651")};a.decorators=[{type:t.Component,args:[{selector:"expand-button",changeDetection:t.ChangeDetectionStrategy.OnPush,template:'\n    <button class="sb-wrapper sb-expand sb-show-icon"\n            [style.fontSize.px]="size"\n            (click)="toggle.emit(!expanded)">\n\n      <div class="sb-content">\n        <div class="sb-icon">\n          <fa-icon [icon]="expanded ? lessIcon : moreIcon"></fa-icon>\n        </div>\n      </div>\n    </button>\n  '}]}],a.ctorParameters=function(){return[{type:t.ElementRef}]},a.propDecorators={moreIcon:[{type:t.Input}],lessIcon:[{type:t.Input}],expanded:[{type:t.Input}],size:[{type:t.Input}],toggle:[{type:t.Output}]};var c=function(){function e(){}return e.withConfig=function(t){return{ngModule:e,providers:[{provide:o.SHARE_BUTTONS_CONFIG,useValue:t}]}},e}();c.decorators=[{type:t.NgModule,args:[{declarations:[i,a],imports:[s.ShareButtonModule,n.CommonModule],exports:[s.ShareButtonModule,i]}]}],e.ShareButtons=i,e.ShareButtonsModule=c,e.Éµa=a,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-sharebuttons-buttons.umd.min.js.map