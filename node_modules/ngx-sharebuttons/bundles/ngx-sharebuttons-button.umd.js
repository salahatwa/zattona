(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@fortawesome/angular-fontawesome'), require('ngx-sharebuttons')) :
    typeof define === 'function' && define.amd ? define('ngx-sharebuttons/button', ['exports', '@angular/core', '@angular/common', '@fortawesome/angular-fontawesome', 'ngx-sharebuttons'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-sharebuttons'] = global['ngx-sharebuttons'] || {}, global['ngx-sharebuttons'].button = {}), global.ng.core, global.ng.common, global.angularFontawesome, global['ngx-sharebuttons']));
}(this, (function (exports, core, common, angularFontawesome, ngxSharebuttons) { 'use strict';

    // Uncomment the following line in development mode
    // import { ShareService, ShareDirective } from '../../src/public-api';
    var ShareButton = /** @class */ (function () {
        function ShareButton(_share) {
            this._share = _share;
            /** Show button icon */
            this.showIcon = true;
            /** Show button text */
            this.showText = false;
            /** Button size */
            this.size = this._share.config.size;
            /** Button theme */
            this.theme = this._share.config.theme;
            /** Stream that emits when share dialog is opened */
            this.opened = new core.EventEmitter();
            /** Stream that emits when share dialog is closed */
            this.closed = new core.EventEmitter();
        }
        Object.defineProperty(ShareButton.prototype, "buttonClass", {
            /** Set theme as button class */
            get: function () {
                return "sb-button sb-" + this.theme;
            },
            enumerable: false,
            configurable: true
        });
        return ShareButton;
    }());
    ShareButton.decorators = [
        { type: core.Component, args: [{
                    selector: 'share-button',
                    template: "<button type=\"button\"\n        class=\"sb-wrapper\"\n        #btn=\"shareButton\"\n        [shareButton]=\"button\"\n        [url]=\"url\"\n        [image]=\"image\"\n        [title]=\"title\"\n        [description]=\"description\"\n        [tags]=\"tags\"\n        [autoSetMeta]=\"autoSetMeta\"\n        (opened)=\"opened.emit($event)\"\n        (closed)=\"closed.emit($event)\"\n        [class.sb-show-icon]=\"showIcon\"\n        [class.sb-show-text]=\"showText\"\n        [style.fontSize.px]=\"(1 + size/20) * 14\"\n        [disabled]=\"disabled\">\n\n  <div *ngIf=\"btn\" class=\"sb-content\">\n\n    <div *ngIf=\"showIcon && btn.icon\" class=\"sb-icon\">\n      <fa-icon [icon]=\"icon || btn.icon\" [fixedWidth]=\"true\"></fa-icon>\n    </div>\n\n    <div *ngIf=\"showText\" class=\"sb-text\">\n      {{ text || btn.text }}\n    </div>\n\n  </div>\n</button>\n",
                    changeDetection: core.ChangeDetectionStrategy.OnPush,
                    styles: [":host{--sb-margin:0.3125em}"]
                },] }
    ];
    ShareButton.ctorParameters = function () { return [
        { type: ngxSharebuttons.ShareService }
    ]; };
    ShareButton.propDecorators = {
        button: [{ type: core.Input }],
        url: [{ type: core.Input }],
        title: [{ type: core.Input }],
        description: [{ type: core.Input }],
        image: [{ type: core.Input }],
        tags: [{ type: core.Input }],
        autoSetMeta: [{ type: core.Input }],
        showIcon: [{ type: core.Input }],
        showText: [{ type: core.Input }],
        text: [{ type: core.Input }],
        icon: [{ type: core.Input }],
        size: [{ type: core.Input }],
        theme: [{ type: core.Input }],
        disabled: [{ type: core.Input }],
        opened: [{ type: core.Output }],
        closed: [{ type: core.Output }],
        buttonClass: [{ type: core.HostBinding, args: ['class',] }]
    };

    var ShareButtonModule = /** @class */ (function () {
        function ShareButtonModule() {
        }
        ShareButtonModule.withConfig = function (config) {
            return {
                ngModule: ShareButtonModule,
                providers: [{ provide: ngxSharebuttons.SHARE_BUTTONS_CONFIG, useValue: config }]
            };
        };
        return ShareButtonModule;
    }());
    ShareButtonModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [
                        ShareButton
                    ],
                    imports: [
                        ngxSharebuttons.ShareModule,
                        angularFontawesome.FontAwesomeModule,
                        common.CommonModule
                    ],
                    exports: [
                        ngxSharebuttons.ShareModule,
                        angularFontawesome.FontAwesomeModule,
                        ShareButton
                    ]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ShareButton = ShareButton;
    exports.ShareButtonModule = ShareButtonModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-sharebuttons-button.umd.js.map
