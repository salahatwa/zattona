import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
// import { ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from '../../src/public-api';
// import { ShareButtonsModule } from '../../buttons/src/public_api';
// Uncomment the following in development mode
import { SHARE_BUTTONS_CONFIG } from 'ngx-sharebuttons';
import { ShareButtonsModule } from 'ngx-sharebuttons/buttons';
import { ShareButtonsPopup } from './share-buttons-popup';
import { SharePopupService } from './share-popup.service';
import { SharePopupButtonsDirective } from './share-popup-buttons.directive';
import { SharePopupComponent } from './share-popup.component';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
export class ShareButtonsPopupModule {
    static withConfig(config) {
        return {
            ngModule: ShareButtonsModule,
            providers: [{ provide: SHARE_BUTTONS_CONFIG, useValue: config }]
        };
    }
}
ShareButtonsPopupModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ShareButtonsPopup,
                    SharePopupButtonsDirective,
                    SharePopupComponent
                ],
                imports: [
                    CommonModule,
                    ShareButtonsModule,
                    FontAwesomeModule
                ],
                exports: [
                    ShareButtonsModule,
                    ShareButtonsPopup,
                    SharePopupButtonsDirective,
                    SharePopupComponent
                ],
                providers: [
                    SharePopupService
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUtYnV0dG9ucy1wb3B1cC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXNoYXJlYnV0dG9ucy9wb3B1cC9zcmMvIiwic291cmNlcyI6WyJzaGFyZS1idXR0b25zLXBvcHVwLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsbUZBQW1GO0FBQ25GLHFFQUFxRTtBQUNyRSw4Q0FBOEM7QUFDOUMsT0FBTyxFQUFzQixvQkFBb0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTlELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBdUJyRSxNQUFNLE9BQU8sdUJBQXVCO0lBQ2xDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBMkI7UUFDM0MsT0FBTztZQUNMLFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBQyxDQUFDO1NBQy9ELENBQUM7SUFDSixDQUFDOzs7WUEzQkYsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWixpQkFBaUI7b0JBQ2pCLDBCQUEwQjtvQkFDMUIsbUJBQW1CO2lCQUNwQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsWUFBWTtvQkFDWixrQkFBa0I7b0JBQ2xCLGlCQUFpQjtpQkFDbEI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLGtCQUFrQjtvQkFDbEIsaUJBQWlCO29CQUNqQiwwQkFBMEI7b0JBQzFCLG1CQUFtQjtpQkFDcEI7Z0JBQ0QsU0FBUyxFQUFFO29CQUNULGlCQUFpQjtpQkFDbEI7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG4vLyBpbXBvcnQgeyBTaGFyZUJ1dHRvbnNDb25maWcsIFNIQVJFX0JVVFRPTlNfQ09ORklHIH0gZnJvbSAnLi4vLi4vc3JjL3B1YmxpYy1hcGknO1xuLy8gaW1wb3J0IHsgU2hhcmVCdXR0b25zTW9kdWxlIH0gZnJvbSAnLi4vLi4vYnV0dG9ucy9zcmMvcHVibGljX2FwaSc7XG4vLyBVbmNvbW1lbnQgdGhlIGZvbGxvd2luZyBpbiBkZXZlbG9wbWVudCBtb2RlXG5pbXBvcnQgeyBTaGFyZUJ1dHRvbnNDb25maWcsIFNIQVJFX0JVVFRPTlNfQ09ORklHIH0gZnJvbSAnbmd4LXNoYXJlYnV0dG9ucyc7XG5pbXBvcnQgeyBTaGFyZUJ1dHRvbnNNb2R1bGUgfSBmcm9tICduZ3gtc2hhcmVidXR0b25zL2J1dHRvbnMnO1xuXG5pbXBvcnQgeyBTaGFyZUJ1dHRvbnNQb3B1cCB9IGZyb20gJy4vc2hhcmUtYnV0dG9ucy1wb3B1cCc7XG5pbXBvcnQgeyBTaGFyZVBvcHVwU2VydmljZSB9IGZyb20gJy4vc2hhcmUtcG9wdXAuc2VydmljZSc7XG5pbXBvcnQgeyBTaGFyZVBvcHVwQnV0dG9uc0RpcmVjdGl2ZSB9IGZyb20gJy4vc2hhcmUtcG9wdXAtYnV0dG9ucy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU2hhcmVQb3B1cENvbXBvbmVudCB9IGZyb20gJy4vc2hhcmUtcG9wdXAuY29tcG9uZW50JztcbmltcG9ydCB7IEZvbnRBd2Vzb21lTW9kdWxlIH0gZnJvbSAnQGZvcnRhd2Vzb21lL2FuZ3VsYXItZm9udGF3ZXNvbWUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTaGFyZUJ1dHRvbnNQb3B1cCxcbiAgICBTaGFyZVBvcHVwQnV0dG9uc0RpcmVjdGl2ZSxcbiAgICBTaGFyZVBvcHVwQ29tcG9uZW50XG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgU2hhcmVCdXR0b25zTW9kdWxlLFxuICAgIEZvbnRBd2Vzb21lTW9kdWxlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBTaGFyZUJ1dHRvbnNNb2R1bGUsXG4gICAgU2hhcmVCdXR0b25zUG9wdXAsXG4gICAgU2hhcmVQb3B1cEJ1dHRvbnNEaXJlY3RpdmUsXG4gICAgU2hhcmVQb3B1cENvbXBvbmVudFxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBTaGFyZVBvcHVwU2VydmljZVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFNoYXJlQnV0dG9uc1BvcHVwTW9kdWxlIHtcbiAgc3RhdGljIHdpdGhDb25maWcoY29uZmlnPzogU2hhcmVCdXR0b25zQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxTaGFyZUJ1dHRvbnNNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IFNoYXJlQnV0dG9uc01vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW3twcm92aWRlOiBTSEFSRV9CVVRUT05TX0NPTkZJRywgdXNlVmFsdWU6IGNvbmZpZ31dXG4gICAgfTtcbiAgfVxufVxuIl19