import { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, HostBinding, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import { ShareService, SHARE_BUTTONS_CONFIG, ShareModule } from 'ngx-sharebuttons';

// Uncomment the following line in development mode
// import { ShareService, ShareDirective } from '../../src/public-api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-sharebuttons';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@fortawesome/angular-fontawesome';

function ShareButton_div_2_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵelement(1, "fa-icon", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("icon", ctx_r2.icon || _r0.icon)("fixedWidth", true);
} }
function ShareButton_div_2_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.text || _r0.text, " ");
} }
function ShareButton_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵtemplate(1, ShareButton_div_2_div_1_Template, 2, 2, "div", 4);
    ɵngcc0.ɵɵtemplate(2, ShareButton_div_2_div_2_Template, 2, 1, "div", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showIcon && _r0.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showText);
} }
class ShareButton {
    constructor(_share) {
        this._share = _share;
        /** Show button icon */
        this.showIcon = true;
        /** Show button text */
        this.showText = false;
        /** Button size */
        this.size = this._share.config.size;
        /** Button theme */
        this.theme = this._share.config.theme;
        /** Stream that emits when share dialog is opened */
        this.opened = new EventEmitter();
        /** Stream that emits when share dialog is closed */
        this.closed = new EventEmitter();
    }
    /** Set theme as button class */
    get buttonClass() {
        return `sb-button sb-${this.theme}`;
    }
}
ShareButton.ɵfac = function ShareButton_Factory(t) { return new (t || ShareButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ShareService)); };
ShareButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ShareButton, selectors: [["share-button"]], hostVars: 2, hostBindings: function ShareButton_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.buttonClass);
    } }, inputs: { showIcon: "showIcon", showText: "showText", size: "size", theme: "theme", button: "button", url: "url", title: "title", description: "description", image: "image", tags: "tags", autoSetMeta: "autoSetMeta", text: "text", icon: "icon", disabled: "disabled" }, outputs: { opened: "opened", closed: "closed" }, decls: 3, vars: 15, consts: [["type", "button", 1, "sb-wrapper", 3, "shareButton", "url", "image", "title", "description", "tags", "autoSetMeta", "disabled", "opened", "closed"], ["btn", "shareButton"], ["class", "sb-content", 4, "ngIf"], [1, "sb-content"], ["class", "sb-icon", 4, "ngIf"], ["class", "sb-text", 4, "ngIf"], [1, "sb-icon"], [3, "icon", "fixedWidth"], [1, "sb-text"]], template: function ShareButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "button", 0, 1);
        ɵngcc0.ɵɵlistener("opened", function ShareButton_Template_button_opened_0_listener($event) { return ctx.opened.emit($event); })("closed", function ShareButton_Template_button_closed_0_listener($event) { return ctx.closed.emit($event); });
        ɵngcc0.ɵɵtemplate(2, ShareButton_div_2_Template, 3, 2, "div", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵstyleProp("font-size", (1 + ctx.size / 20) * 14, "px");
        ɵngcc0.ɵɵclassProp("sb-show-icon", ctx.showIcon)("sb-show-text", ctx.showText);
        ɵngcc0.ɵɵproperty("shareButton", ctx.button)("url", ctx.url)("image", ctx.image)("title", ctx.title)("description", ctx.description)("tags", ctx.tags)("autoSetMeta", ctx.autoSetMeta)("disabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", _r0);
    } }, directives: [ɵngcc1.ShareDirective, ɵngcc2.NgIf, ɵngcc3.FaIconComponent], styles: ["[_nghost-%COMP%]{--sb-margin:0.3125em}"], changeDetection: 0 });
ShareButton.ctorParameters = () => [
    { type: ShareService }
];
ShareButton.propDecorators = {
    button: [{ type: Input }],
    url: [{ type: Input }],
    title: [{ type: Input }],
    description: [{ type: Input }],
    image: [{ type: Input }],
    tags: [{ type: Input }],
    autoSetMeta: [{ type: Input }],
    showIcon: [{ type: Input }],
    showText: [{ type: Input }],
    text: [{ type: Input }],
    icon: [{ type: Input }],
    size: [{ type: Input }],
    theme: [{ type: Input }],
    disabled: [{ type: Input }],
    opened: [{ type: Output }],
    closed: [{ type: Output }],
    buttonClass: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShareButton, [{
        type: Component,
        args: [{
                selector: 'share-button',
                template: "<button type=\"button\"\n        class=\"sb-wrapper\"\n        #btn=\"shareButton\"\n        [shareButton]=\"button\"\n        [url]=\"url\"\n        [image]=\"image\"\n        [title]=\"title\"\n        [description]=\"description\"\n        [tags]=\"tags\"\n        [autoSetMeta]=\"autoSetMeta\"\n        (opened)=\"opened.emit($event)\"\n        (closed)=\"closed.emit($event)\"\n        [class.sb-show-icon]=\"showIcon\"\n        [class.sb-show-text]=\"showText\"\n        [style.fontSize.px]=\"(1 + size/20) * 14\"\n        [disabled]=\"disabled\">\n\n  <div *ngIf=\"btn\" class=\"sb-content\">\n\n    <div *ngIf=\"showIcon && btn.icon\" class=\"sb-icon\">\n      <fa-icon [icon]=\"icon || btn.icon\" [fixedWidth]=\"true\"></fa-icon>\n    </div>\n\n    <div *ngIf=\"showText\" class=\"sb-text\">\n      {{ text || btn.text }}\n    </div>\n\n  </div>\n</button>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{--sb-margin:0.3125em}"]
            }]
    }], function () { return [{ type: ɵngcc1.ShareService }]; }, { showIcon: [{
            type: Input
        }], showText: [{
            type: Input
        }], size: [{
            type: Input
        }], theme: [{
            type: Input
        }], opened: [{
            type: Output
        }], closed: [{
            type: Output
        }], buttonClass: [{
            type: HostBinding,
            args: ['class']
        }], button: [{
            type: Input
        }], url: [{
            type: Input
        }], title: [{
            type: Input
        }], description: [{
            type: Input
        }], image: [{
            type: Input
        }], tags: [{
            type: Input
        }], autoSetMeta: [{
            type: Input
        }], text: [{
            type: Input
        }], icon: [{
            type: Input
        }], disabled: [{
            type: Input
        }] }); })();

class ShareButtonModule {
    static withConfig(config) {
        return {
            ngModule: ShareButtonModule,
            providers: [{ provide: SHARE_BUTTONS_CONFIG, useValue: config }]
        };
    }
}
ShareButtonModule.ɵfac = function ShareButtonModule_Factory(t) { return new (t || ShareButtonModule)(); };
ShareButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ShareButtonModule });
ShareButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            ShareModule,
            FontAwesomeModule,
            CommonModule
        ], ShareModule,
        FontAwesomeModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ShareButtonModule, { declarations: function () { return [ShareButton]; }, imports: function () { return [ShareModule,
        FontAwesomeModule,
        CommonModule]; }, exports: function () { return [ShareModule,
        FontAwesomeModule, ShareButton]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShareButtonModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ShareButton
                ],
                imports: [
                    ShareModule,
                    FontAwesomeModule,
                    CommonModule
                ],
                exports: [
                    ShareModule,
                    FontAwesomeModule,
                    ShareButton
                ]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ShareButton, ShareButtonModule };

//# sourceMappingURL=ngx-sharebuttons-button.js.map