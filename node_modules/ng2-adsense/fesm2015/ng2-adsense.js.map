{"version":3,"file":"ng2-adsense.js","sources":["../../src/lib/adsense-config.ts","../../src/lib/adsense.component.ts","../../src/lib/adsense.module.ts","../../src/lib/ng2-adsense.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Set optional global default values\n */\nexport interface AdsenseConfig {\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\n  adClient: string;\n  /** ad slot/number */\n  adSlot: string | number;\n  /** data-ad-format default: auto */\n  adFormat: string;\n  /** ins element display style */\n  display: string;\n  /** ins element height in px */\n  width: number;\n  /** ins element width in px */\n  height: number;\n  /** used for in-feed ads */\n  layout: string;\n  /** used for in-feed ads */\n  layoutKey: string;\n  /** enable page-level ads */\n  pageLevelAds: boolean;\n  adtest: string;\n  /** used for flexible ads */\n  fullWidthResponsive: boolean;\n}\n\nexport const ADSENSE_TOKEN = new InjectionToken<AdsenseConfig>(\n  'AdsenseConfig',\n);\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { ADSENSE_TOKEN, AdsenseConfig } from './adsense-config';\n\n@Component({\n  selector: 'ng2-adsense,ng-adsense',\n  template: `\n    <ins\n      #ins\n      class=\"adsbygoogle {{ className }}\"\n      [style.display]=\"display\"\n      [style.width.px]=\"width\"\n      [style.height.px]=\"height\"\n      [attr.data-ad-client]=\"adClient\"\n      [attr.data-ad-slot]=\"adSlot\"\n      [attr.data-ad-format]=\"adFormat\"\n      [attr.data-ad-region]=\"adRegion\"\n      [attr.data-layout]=\"layout\"\n      [attr.data-adtest]=\"adtest\"\n      [attr.data-layout-key]=\"layoutKey\"\n      [attr.data-full-width-responsive]=\"fullWidthResponsive\"\n    >\n    </ins>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdsenseComponent implements OnInit, AfterViewInit, OnDestroy {\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\n  @Input() adClient!: string;\n  /** ad slot/number */\n  @Input() adSlot!: string | number;\n  @Input() adFormat!: string;\n  /** can be manually set if you need all ads on a page to have same id page-xxx */\n  @Input() adRegion = 'page-' + Math.floor(Math.random() * 10000) + 1;\n  /** ins element display style */\n  @Input() display!: string;\n  /** ins element height in px */\n  @Input() width!: number;\n  /** ins element width in px */\n  @Input() height!: number;\n  /** used for in-feed ads */\n  @Input() layout!: string;\n  /** used for in-feed ads */\n  @Input() layoutKey!: string;\n  /** enable page-level ads */\n  @Input() pageLevelAds!: boolean;\n  /** sets up some sort of google test ad */\n  @Input() adtest!: string;\n  /* used for flexible ads */\n  @Input() fullWidthResponsive!: boolean;\n  /**\n   * classes applied to the ins element\n   */\n  @Input() className = '';\n  @ViewChild('ins', { read: ElementRef, static: true }) ins!: ElementRef;\n\n  constructor(\n    @Inject(ADSENSE_TOKEN) private config: AdsenseConfig,\n    // tslint:disable-next-line:no-any\n    @Inject(PLATFORM_ID) private platform: any,\n  ) {}\n\n  ngOnInit(): void {\n    const config = this.config;\n    this.adClient = this.adClient ?? config.adClient;\n    this.adSlot = this.adSlot ?? config.adSlot;\n    this.adFormat = this.adFormat ?? config.adFormat ?? 'auto';\n    this.display = this.display ?? config.display ?? 'block';\n    this.width = this.width ?? config.width;\n    this.height = this.height ?? config.height;\n    this.layout = this.layout ?? config.layout;\n    this.layoutKey = this.layoutKey ?? config.layoutKey;\n    this.pageLevelAds = this.pageLevelAds ?? config.pageLevelAds;\n    this.adtest = this.adtest ?? config.adtest;\n    this.fullWidthResponsive = this.fullWidthResponsive ?? config.fullWidthResponsive;\n  }\n  ngOnDestroy(): void {\n    const iframe = this.ins.nativeElement.querySelector('iframe');\n    if (iframe && iframe.contentWindow) {\n      iframe.src = 'about:blank';\n      iframe.remove();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platform)) {\n      this.push();\n    }\n  }\n\n  push(): void {\n    const p: Record<string, string | boolean> = {};\n    if (this.pageLevelAds) {\n      p.google_ad_client = this.adClient;\n      p.enable_page_level_ads = true;\n    }\n\n    if (window) {\n      try {\n        // tslint:disable-next-line:no-any\n        ((window as any).adsbygoogle = (window as any).adsbygoogle || []).push(p);\n      } catch {\n        // pass\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { AdsenseConfig, ADSENSE_TOKEN } from './adsense-config';\nimport { AdsenseComponent } from './adsense.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AdsenseComponent],\n  declarations: [AdsenseComponent],\n})\nexport class AdsenseModule {\n  static forRoot(config: Partial<AdsenseConfig> = {}): ModuleWithProviders<AdsenseModule> {\n    return {\n      ngModule: AdsenseModule,\n      providers: [{ provide: ADSENSE_TOKEN, useValue: config }],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}