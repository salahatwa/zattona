{"version":3,"sources":["../../src/lib/adsense-config.ts","../../src/lib/adsense.component.ts","../../src/lib/adsense.module.ts"],"names":["ADSENSE_TOKEN","InjectionToken","AdsenseComponent","config","platform","this","adRegion","Math","floor","random","className","prototype","ngOnInit","adClient","_a","adSlot","_b","adFormat","_d","_c","display","_f","_e","width","_g","height","_h","layout","_j","layoutKey","_k","pageLevelAds","_l","adtest","_m","fullWidthResponsive","_o","ngOnDestroy","iframe","ins","nativeElement","querySelector","contentWindow","src","remove","ngAfterViewInit","isPlatformBrowser","push","p","google_ad_client","enable_page_level_ads","window","adsbygoogle","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Inject","PLATFORM_ID","Input","ViewChild","read","ElementRef","static","AdsenseModule","forRoot","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Set optional global default values\n */\nexport interface AdsenseConfig {\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\n  adClient: string;\n  /** ad slot/number */\n  adSlot: string | number;\n  /** data-ad-format default: auto */\n  adFormat: string;\n  /** ins element display style */\n  display: string;\n  /** ins element height in px */\n  width: number;\n  /** ins element width in px */\n  height: number;\n  /** used for in-feed ads */\n  layout: string;\n  /** used for in-feed ads */\n  layoutKey: string;\n  /** enable page-level ads */\n  pageLevelAds: boolean;\n  adtest: string;\n  /** used for flexible ads */\n  fullWidthResponsive: boolean;\n}\n\nexport const ADSENSE_TOKEN = new InjectionToken<AdsenseConfig>(\n  'AdsenseConfig',\n);\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { ADSENSE_TOKEN, AdsenseConfig } from './adsense-config';\n\n@Component({\n  selector: 'ng2-adsense,ng-adsense',\n  template: `\n    <ins\n      #ins\n      class=\"adsbygoogle {{ className }}\"\n      [style.display]=\"display\"\n      [style.width.px]=\"width\"\n      [style.height.px]=\"height\"\n      [attr.data-ad-client]=\"adClient\"\n      [attr.data-ad-slot]=\"adSlot\"\n      [attr.data-ad-format]=\"adFormat\"\n      [attr.data-ad-region]=\"adRegion\"\n      [attr.data-layout]=\"layout\"\n      [attr.data-adtest]=\"adtest\"\n      [attr.data-layout-key]=\"layoutKey\"\n      [attr.data-full-width-responsive]=\"fullWidthResponsive\"\n    >\n    </ins>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdsenseComponent implements OnInit, AfterViewInit, OnDestroy {\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\n  @Input() adClient!: string;\n  /** ad slot/number */\n  @Input() adSlot!: string | number;\n  @Input() adFormat!: string;\n  /** can be manually set if you need all ads on a page to have same id page-xxx */\n  @Input() adRegion = 'page-' + Math.floor(Math.random() * 10000) + 1;\n  /** ins element display style */\n  @Input() display!: string;\n  /** ins element height in px */\n  @Input() width!: number;\n  /** ins element width in px */\n  @Input() height!: number;\n  /** used for in-feed ads */\n  @Input() layout!: string;\n  /** used for in-feed ads */\n  @Input() layoutKey!: string;\n  /** enable page-level ads */\n  @Input() pageLevelAds!: boolean;\n  /** sets up some sort of google test ad */\n  @Input() adtest!: string;\n  /* used for flexible ads */\n  @Input() fullWidthResponsive!: boolean;\n  /**\n   * classes applied to the ins element\n   */\n  @Input() className = '';\n  @ViewChild('ins', { read: ElementRef, static: true }) ins!: ElementRef;\n\n  constructor(\n    @Inject(ADSENSE_TOKEN) private config: AdsenseConfig,\n    // tslint:disable-next-line:no-any\n    @Inject(PLATFORM_ID) private platform: any,\n  ) {}\n\n  ngOnInit(): void {\n    const config = this.config;\n    this.adClient = this.adClient ?? config.adClient;\n    this.adSlot = this.adSlot ?? config.adSlot;\n    this.adFormat = this.adFormat ?? config.adFormat ?? 'auto';\n    this.display = this.display ?? config.display ?? 'block';\n    this.width = this.width ?? config.width;\n    this.height = this.height ?? config.height;\n    this.layout = this.layout ?? config.layout;\n    this.layoutKey = this.layoutKey ?? config.layoutKey;\n    this.pageLevelAds = this.pageLevelAds ?? config.pageLevelAds;\n    this.adtest = this.adtest ?? config.adtest;\n    this.fullWidthResponsive = this.fullWidthResponsive ?? config.fullWidthResponsive;\n  }\n  ngOnDestroy(): void {\n    const iframe = this.ins.nativeElement.querySelector('iframe');\n    if (iframe && iframe.contentWindow) {\n      iframe.src = 'about:blank';\n      iframe.remove();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platform)) {\n      this.push();\n    }\n  }\n\n  push(): void {\n    const p: Record<string, string | boolean> = {};\n    if (this.pageLevelAds) {\n      p.google_ad_client = this.adClient;\n      p.enable_page_level_ads = true;\n    }\n\n    if (window) {\n      try {\n        // tslint:disable-next-line:no-any\n        ((window as any).adsbygoogle = (window as any).adsbygoogle || []).push(p);\n      } catch {\n        // pass\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { AdsenseConfig, ADSENSE_TOKEN } from './adsense-config';\nimport { AdsenseComponent } from './adsense.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AdsenseComponent],\n  declarations: [AdsenseComponent],\n})\nexport class AdsenseModule {\n  static forRoot(config: Partial<AdsenseConfig> = {}): ModuleWithProviders<AdsenseModule> {\n    return {\n      ngModule: AdsenseModule,\n      providers: [{ provide: ADSENSE_TOKEN, useValue: config }],\n    };\n  }\n}\n"]}