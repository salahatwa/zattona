{"version":3,"file":"tracing.js","sourceRoot":"","sources":["../src/tracing.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Directive, Injectable, Input, NgModule, OnDestroy, OnInit } from '@angular/core';\nimport { Event, NavigationEnd, NavigationStart, Router } from '@angular/router';\nimport { getCurrentHub } from '@sentry/browser';\nimport { Span, Transaction, TransactionContext } from '@sentry/types';\nimport { logger, stripUrlQueryAndFragment, timestampWithMs } from '@sentry/utils';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\n\nimport { runOutsideAngular } from './zone';\n\nlet instrumentationInitialized: boolean;\nlet stashedStartTransaction: (context: TransactionContext) => Transaction | undefined;\nlet stashedStartTransactionOnLocationChange: boolean;\n\n/**\n * Creates routing instrumentation for Angular Router.\n */\nexport function routingInstrumentation(\n  customStartTransaction: (context: TransactionContext) => Transaction | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  instrumentationInitialized = true;\n  stashedStartTransaction = customStartTransaction;\n  stashedStartTransactionOnLocationChange = startTransactionOnLocationChange;\n\n  if (startTransactionOnPageLoad) {\n    customStartTransaction({\n      name: window.location.pathname,\n      op: 'pageload',\n    });\n  }\n}\n\nexport const instrumentAngularRouting = routingInstrumentation;\n\n/**\n * Grabs active transaction off scope\n */\nexport function getActiveTransaction(): Transaction | undefined {\n  const currentHub = getCurrentHub();\n\n  if (currentHub) {\n    const scope = currentHub.getScope();\n    if (scope) {\n      return scope.getTransaction();\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Angular's Service responsible for hooking into Angular Router and tracking current navigation process.\n * Creates a new transaction for every route change and measures a duration of routing process.\n */\n@Injectable({ providedIn: 'root' })\nexport class TraceService implements OnDestroy {\n  public navStart$: Observable<Event> = this._router.events.pipe(\n    filter(event => event instanceof NavigationStart),\n    tap(event => {\n      if (!instrumentationInitialized) {\n        logger.error('Angular integration has tracing enabled, but Tracing integration is not configured');\n        return;\n      }\n\n      const navigationEvent = event as NavigationStart;\n      const strippedUrl = stripUrlQueryAndFragment(navigationEvent.url);\n      let activeTransaction = getActiveTransaction();\n\n      if (!activeTransaction && stashedStartTransactionOnLocationChange) {\n        activeTransaction = stashedStartTransaction({\n          name: strippedUrl,\n          op: 'navigation',\n        });\n      }\n\n      if (activeTransaction) {\n        this._routingSpan = activeTransaction.startChild({\n          description: `${navigationEvent.url}`,\n          op: `angular.routing`,\n          tags: {\n            'routing.instrumentation': '@sentry/angular',\n            url: strippedUrl,\n            ...(navigationEvent.navigationTrigger && {\n              navigationTrigger: navigationEvent.navigationTrigger,\n            }),\n          },\n        });\n      }\n    }),\n  );\n\n  public navEnd$: Observable<Event> = this._router.events.pipe(\n    filter(event => event instanceof NavigationEnd),\n    tap(() => {\n      if (this._routingSpan) {\n        runOutsideAngular(() => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this._routingSpan!.finish();\n        });\n        this._routingSpan = null;\n      }\n    }),\n  );\n\n  private _routingSpan: Span | null = null;\n  private _subscription: Subscription = new Subscription();\n\n  public constructor(private readonly _router: Router) {\n    this._subscription.add(this.navStart$.subscribe());\n    this._subscription.add(this.navEnd$.subscribe());\n  }\n\n  /**\n   * This is used to prevent memory leaks when the root view is created and destroyed multiple times,\n   * since `subscribe` callbacks capture `this` and prevent many resources from being GC'd.\n   */\n  public ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\n/**\n * A directive that can be used to capture initialization lifecycle of the whole component.\n */\n@Directive({ selector: '[trace]' })\nexport class TraceDirective implements OnInit, AfterViewInit {\n  @Input('trace') public componentName: string = UNKNOWN_COMPONENT;\n\n  private _tracingSpan?: Span;\n\n  /**\n   * Implementation of OnInit lifecycle method\n   * @inheritdoc\n   */\n  public ngOnInit(): void {\n    const activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n      this._tracingSpan = activeTransaction.startChild({\n        description: `<${this.componentName}>`,\n        op: `angular.initialize`,\n      });\n    }\n  }\n\n  /**\n   * Implementation of AfterViewInit lifecycle method\n   * @inheritdoc\n   */\n  public ngAfterViewInit(): void {\n    if (this._tracingSpan) {\n      this._tracingSpan.finish();\n    }\n  }\n}\n\n/**\n * A module serves as a single compilation unit for the `TraceDirective` and can be re-used by any other module.\n */\n@NgModule({\n  declarations: [TraceDirective],\n  exports: [TraceDirective],\n})\nexport class TraceModule {}\n\n/**\n * Decorator function that can be used to capture initialization lifecycle of the whole component.\n */\nexport function TraceClassDecorator(): ClassDecorator {\n  let tracingSpan: Span;\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  return target => {\n    const originalOnInit = target.prototype.ngOnInit;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    target.prototype.ngOnInit = function(...args: any[]): ReturnType<typeof originalOnInit> {\n      const activeTransaction = getActiveTransaction();\n      if (activeTransaction) {\n        tracingSpan = activeTransaction.startChild({\n          description: `<${target.name}>`,\n          op: `angular.initialize`,\n        });\n      }\n      if (originalOnInit) {\n        return originalOnInit.apply(this, args);\n      }\n    };\n\n    const originalAfterViewInit = target.prototype.ngAfterViewInit;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    target.prototype.ngAfterViewInit = function(...args: any[]): ReturnType<typeof originalAfterViewInit> {\n      if (tracingSpan) {\n        tracingSpan.finish();\n      }\n      if (originalAfterViewInit) {\n        return originalAfterViewInit.apply(this, args);\n      }\n    };\n  };\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n}\n\n/**\n * Decorator function that can be used to capture a single lifecycle methods of the component.\n */\nexport function TraceMethodDecorator(): MethodDecorator {\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type, @typescript-eslint/ban-types\n  return (target: Object, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    descriptor.value = function(...args: any[]): ReturnType<typeof originalMethod> {\n      const now = timestampWithMs();\n      const activeTransaction = getActiveTransaction();\n      if (activeTransaction) {\n        activeTransaction.startChild({\n          description: `<${target.constructor.name}>`,\n          endTimestamp: now,\n          op: `angular.${String(propertyKey)}`,\n          startTimestamp: now,\n        });\n      }\n      if (originalMethod) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return originalMethod.apply(this, args);\n      }\n    };\n    return descriptor;\n  };\n}\n"]}