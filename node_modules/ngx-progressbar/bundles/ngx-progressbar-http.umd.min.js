!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("@angular/common/http"),require("rxjs/operators"),require("ngx-progressbar")):"function"==typeof define&&define.amd?define("ngx-progressbar/http",["exports","@angular/core","@angular/common/http","rxjs/operators","ngx-progressbar"],r):r(((e="undefined"!=typeof globalThis?globalThis:e||self)["ngx-progressbar"]=e["ngx-progressbar"]||{},e["ngx-progressbar"].http={}),e.ng.core,e.ng.common.http,e.rxjs.operators,e["ngx-progressbar"])}(this,(function(e,r,t,o,s){"use strict";var n=new r.InjectionToken("ngProgressHttpConfig"),i=function(){function e(e,r){this.ngProgress=e,this._inProgressCount=0,this._config={id:"root",silentApis:[]},this._config=r?Object.assign(Object.assign({},this._config),r):this._config}return e.prototype.intercept=function(e,r){var t=this;return e.headers.has("ignoreProgressBar")?r.handle(e.clone({headers:e.headers.delete("ignoreProgressBar")})):this.checkUrl(e)?r.handle(e):(this._inProgressCount++,this._progressRef=this.ngProgress.ref(this._config.id),this._progressRef.isStarted||this._progressRef.start(),r.handle(e).pipe(o.finalize((function(){t._inProgressCount--,0===t._inProgressCount&&t._progressRef.complete()}))))},e.prototype.checkUrl=function(e){var r=e.url.toLowerCase();return!!this._config.silentApis.find((function(e){return r.startsWith(e)}))},e}();i.decorators=[{type:r.Injectable}],i.ctorParameters=function(){return[{type:s.NgProgress},{type:void 0,decorators:[{type:r.Optional},{type:r.Inject,args:[n]}]}]};var g=function(){function e(){}return e.withConfig=function(r){return{ngModule:e,providers:[{provide:n,useValue:r}]}},e}();g.decorators=[{type:r.NgModule,args:[{providers:[{provide:t.HTTP_INTERCEPTORS,useClass:i,multi:!0}]}]}],e.NG_PROGRESS_HTTP_CONFIG=n,e.NgProgressHttpModule=g,e.Éµa=i,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-progressbar-http.umd.min.js.map